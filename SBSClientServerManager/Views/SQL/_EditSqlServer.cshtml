@model SBSClientServerManager.Models.ViewModels.SqlServerFormViewModel
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")"
        type="text/javascript">
</script>

<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"
        type="text/javascript">
</script>

@using (Html.BeginForm("Edit", "SQL", FormMethod.Post))
{
    <div class="form-group">
        <div class="form-group">
            @Html.LabelFor(s => s.InstanceName)
            @Html.TextBoxFor(s => s.InstanceName, new { @class = "form-control", @Value = Model.InstanceName })
            @Html.ValidationMessageFor(s => s.InstanceName)
        </div>
        <div class="form-group">
            @Html.LabelFor(s => s.Username)
            @Html.TextBoxFor(s => s.Username, new { @class = "form-control", @Value = Model.Username })
            @Html.ValidationMessageFor(s => s.Username)
        </div>
        <div class="form-group">
            @Html.LabelFor(s => s.Password)
            @Html.TextBoxFor(s => s.Password, new { @class = "form-control", @Value = Model.Password })
            @Html.ValidationMessageFor(s => s.Password)
        </div>

        <div class="form-group">
            @Html.HiddenFor(s => s.ClientId)
            @Html.HiddenFor(s => s.Id)
            @Html.AntiForgeryToken()

        </div>

        <div class="form-group">
            <button type="submit" class="btn btn-primary">Update Sql Server Details</button>
            <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
        </div>
    </div>
}

